using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;

namespace ProjectOneCollegeSearch
{
    public partial class Form1 : Form
    {
        string filePath = @"C:\Users\10787709\source\repos\ProjectOneCollegeSearch\ProjectOneCollegeSearch\bin\Debug\CollegeNamesCities.txt";

        public Form1()
        {
            InitializeComponent();
        }

        /// <summary>
        /// This method will load when the program is started. 
        /// 
        /// it creates a streamreader then opens our input file and then adds the items to the list box while its not
        /// at the end of stream.
        /// It then closes the file.
        /// 
        /// Or it displays an error message if the try block failed.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void Form1_Load(object sender, EventArgs e)
        {
            StreamReader inputfile;

            try
            {
                inputfile = File.OpenText(filePath);

                while (!inputfile.EndOfStream)
                {
                    CollegeLstBox.Items.Add(inputfile.ReadLine());
                }

                inputfile.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        /// <summary>
        /// This method is triggered when the user clicks the save button 
        /// 
        /// it saves the usersCollege and city that was typed in the boxes.
        /// it then checks to make sure neither are an empty string
        /// It then creates the userstate cap var seperated by a comma and writes to our file
        /// and then close the file.
        /// 
        /// or if it is unable to do that it will display an error message letting the user know what happened.
        ///
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SaveBtn_Click(object sender, EventArgs e)
        {
            string userCollege = CollegeNameTxtBox.Text;
            string userCity = CityNameTxtBox.Text;

            StreamWriter outputfile;

            if (userCity != "" && userCollege != "")
            {
                string userCollegeCity = $"{userCollege},{userCity}";

                try
                {
                    outputfile = File.AppendText(filePath);
                    outputfile.WriteLine(userCollegeCity);
                    outputfile.Close();

                    CollegeLstBox.Items.Add(userCollegeCity);
                    CityNameTxtBox.Clear();
                    CollegeNameTxtBox.Clear();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }
    }
}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CollegeAndCitiesConsole
{
    class Program
    {
        static List<string> tempCollegeCityList = new List<string>();
        static Dictionary<string, string> collegeCityDict = new Dictionary<string, string>();

        /// <summary>
        /// This main method will run while our user does not press x. 
        /// 
        /// It will first welcome the user and instruct the user of what to do in order to proceed.
        /// it then enters the while loop and checks if it needs to search by random or using our search dict function.
        /// It will then print out the appropriate city or let the user know that it was unable to find
        /// the college.
        /// </summary>
        /// <param name="args"></param>
        static void Main(string[] args)
        {

            Console.WriteLine("Welcome to the College Search App!");
            Console.WriteLine("---------------------------------------");
            Console.WriteLine("");
            Console.WriteLine("Please enter a college and I will return the city. (x to exit, random to get a Random College/City)");
            Console.WriteLine("College: ");

            string userinput = Console.ReadLine().ToUpper();
            readCollegeCities();

            while (userinput.ToLower() != "x")
            {
                string city = "";

                if (userinput == "RANDOM")
                {
                    Random rand = new Random();

                    int randArrayIndex = rand.Next(0, tempCollegeCityList.Count);
                    string[] tempCollegeCity = tempCollegeCityList[randArrayIndex].Split(',');
                    Console.WriteLine($"Random college: {tempCollegeCity[0]}, City: {tempCollegeCity[1]}");
                    Console.WriteLine("");
                    Console.WriteLine("Please enter a college and I will return the city. (x to exit, random to get a Random College/City)");
                    
                    userinput = Console.ReadLine().ToUpper();
                }
                else
                {
                    if (SearchDict(userinput, ref city))
                    {
                        Console.WriteLine($"College: {userinput}");
                        Console.WriteLine($"The city of {userinput} is {city}");
          
                        Console.WriteLine();
                        Console.WriteLine("Please enter a college and I will return the city. (x to exit, random to get a Random College/City)");
                        userinput = Console.ReadLine().ToUpper();
                    }
                    else
                    {
                        Console.WriteLine($"No Results were found for {userinput}");
                        Console.WriteLine("");
                        Console.WriteLine("Please enter a college and I will return the city. (x to exit, random to get a Random College/City)");
                        Console.WriteLine($"College:");
                        userinput = Console.ReadLine().ToUpper();
                    }
                }
                
            }

        }

        /// <summary>
        /// This method searches through our dict by using the user input and trying to get a value mathcing
        /// the users input from our dictionary if it succeeds it will return true and assign the city
        /// 
        /// otherwise it will return false.
        /// </summary>
        /// <param name="userinput"></param>
        /// <param name="city"></param>
        /// <returns></returns>
        private static bool SearchDict(string userinput, ref string city)
        {
            if (collegeCityDict.TryGetValue(userinput, out city))
            {
                return true;
            }
            return false;
        }

        /// <summary>
        /// This method creates a streamReader object and then tries to opne our colleges and cities file, 
        /// it then creates a temp string and loops while the input is not at the end of stream
        /// it adds the temp string to our list then splits it  by comma and adds it to our dictionary
        /// then closes the file.
        /// 
        /// In our catch block we display the error message to the user and them know how to proceed.
        ///
        /// </summary>
        private static void readCollegeCities()
        {
            StreamReader inputfile;

            try
            {
                inputfile = File.OpenText(@"C:\Users\10787709\source\repos\ProjectOneCollegeSearch\ProjectOneCollegeSearch\bin\Debug\CollegeNamesCities.txt");
                string tempread = "";
                

                while (!inputfile.EndOfStream)
                {
                    tempread = inputfile.ReadLine();
                    tempCollegeCityList.Add(tempread.ToUpper());

                    string[] tempCollegeCity = tempread.Split(',');
                    collegeCityDict.Add(tempCollegeCity[0].ToUpper(), tempCollegeCity[1].ToUpper());

                }
                inputfile.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                Console.WriteLine();
                Console.WriteLine("Press enter to continue");
                Console.ReadLine();
            }
        }
    }
}

